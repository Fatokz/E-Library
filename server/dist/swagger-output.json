{
  "swagger": "2.0",
  "info": {
    "title": "BookSync Library & Book Management API",
    "description": "API documentation for BookSync. After login, use the returned accessToken as a Bearer token in the Authorization header for all protected (user or admin) routes.",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/api",
  "schemes": ["http"],
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT accessToken. Format: Bearer {token}"
    }
  },
  "tags": [
    { "name": "Auth", "description": "Authentication & Registration" },
    { "name": "Books", "description": "Book Management" },
    { "name": "Admin", "description": "Admin Book Management" },
    { "name": "Reviews", "description": "Book Reviews" },
    { "name": "Comments", "description": "Book Comments" },
    { "name": "Borrow", "description": "Borrowing Books" },
    { "name": "Todos", "description": "User Todo List" }
  ],
  "paths": {
    "/auth/user-register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "parameters": [
          { "name": "body", "in": "body", "schema": { "$ref": "#/definitions/UserRegistrationRequest" } }
        ],
        "responses": {
          "200": { "description": "OTP sent" }
        }
      }
    },
    "/auth/verify-user": {
      "post": {
        "tags": ["Auth"],
        "summary": "Verify user OTP and complete registration",
        "parameters": [
          { "name": "body", "in": "body", "schema": { "$ref": "#/definitions/VerifyUserRequest" } }
        ],
        "responses": {
          "201": { "description": "User registered" }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login as user or admin",
        "parameters": [
          { "name": "body", "in": "body", "schema": { "$ref": "#/definitions/LoginRequest" } }
        ],
        "responses": {
          "200": { "description": "Login successful, returns accessToken and refreshToken" }
        }
      }
    },
    "/auth/admin-register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new admin (admin only)",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          { "name": "body", "in": "body", "schema": { "$ref": "#/definitions/AdminRegistrationRequest" } }
        ],
        "responses": {
          "200": { "description": "OTP sent" }
        }
      }
    },
    "/auth/verify-admin": {
      "post": {
        "tags": ["Auth"],
        "summary": "Verify OTP and complete admin registration",
        "parameters": [
          { "name": "body", "in": "body", "schema": { "$ref": "#/definitions/VerifyAdminRequest" } }
        ],
        "responses": {
          "201": { "description": "Admin registered" }
        }
      }
    },
    "/admin/add-book": {
      "post": {
        "tags": ["Admin"],
        "summary": "Add a new book (admin only, image upload)",
        "consumes": ["multipart/form-data"],
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          { "name": "image", "in": "formData", "type": "file", "required": true },
          { "name": "title", "in": "formData", "type": "string", "required": true },
          { "name": "description", "in": "formData", "type": "string", "required": true },
          { "name": "author", "in": "formData", "type": "string", "required": true },
          { "name": "category", "in": "formData", "type": "string", "required": true },
          { "name": "pages", "in": "formData", "type": "integer", "required": true },
          { "name": "publishedDate", "in": "formData", "type": "string", "required": true },
          { "name": "availability", "in": "formData", "type": "string", "enum": ["hardcopy", "ebook", "audio"], "required": true },
          { "name": "isPaid", "in": "formData", "type": "boolean", "required": true },
          { "name": "price", "in": "formData", "type": "number" },
          { "name": "status", "in": "formData", "type": "string", "enum": ["borrowable", "not-borrowable"], "required": true },
          { "name": "isInShelf", "in": "formData", "type": "boolean" }
        ],
        "responses": {
          "201": { "description": "Book added" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/books": {
      "get": {
        "tags": ["Books"],
        "summary": "Get all books",
        "responses": { "200": { "description": "List of books" } }
      }
    },
    "/books/{id}": {
      "get": {
        "tags": ["Books"],
        "summary": "Get a book by ID",
        "parameters": [{ "name": "id", "in": "path", "type": "string", "required": true }],
        "responses": { "200": { "description": "Book details" } }
      },
      "put": {
        "tags": ["Books"],
        "summary": "Update a book (admin only)",
        "security": [{ "BearerAuth": [] }],
        "consumes": ["multipart/form-data"],
        "parameters": [
          { "name": "id", "in": "path", "type": "string", "required": true },
          { "name": "image", "in": "formData", "type": "file" },
          { "name": "title", "in": "formData", "type": "string" },
          { "name": "description", "in": "formData", "type": "string" },
          { "name": "author", "in": "formData", "type": "string" },
          { "name": "category", "in": "formData", "type": "string" },
          { "name": "pages", "in": "formData", "type": "integer" },
          { "name": "publishedDate", "in": "formData", "type": "string" },
          { "name": "availability", "in": "formData", "type": "string", "enum": ["hardcopy", "ebook", "audio"] },
          { "name": "isPaid", "in": "formData", "type": "boolean" },
          { "name": "price", "in": "formData", "type": "number" },
          { "name": "status", "in": "formData", "type": "string", "enum": ["borrowable", "not-borrowable"] },
          { "name": "isInShelf", "in": "formData", "type": "boolean" }
        ],
        "responses": { "200": { "description": "Book updated" }, "401": { "description": "Unauthorized" } }
      },
      "delete": {
        "tags": ["Books"],
        "summary": "Delete a book (admin only)",
        "security": [{ "BearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "type": "string", "required": true }],
        "responses": { "200": { "description": "Book deleted" }, "401": { "description": "Unauthorized" } }
      }
    },
    "/books/search": {
      "get": {
        "tags": ["Books"],
        "summary": "Search books",
        "parameters": [{ "name": "q", "in": "query", "type": "string" }],
        "responses": { "200": { "description": "Search results" } }
      }
    },
    "/reviews/{bookId}": {
      "post": {
        "tags": ["Reviews"],
        "summary": "Add a review to a book (user)",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          { "name": "bookId", "in": "path", "type": "string", "required": true },
          { "name": "rating", "in": "body", "schema": { "type": "integer", "minimum": 1, "maximum": 5 } },
          { "name": "review", "in": "body", "schema": { "type": "string" } }
        ],
        "responses": { "201": { "description": "Review added" }, "401": { "description": "Unauthorized" } }
      }
    },
    "/reviews/{reviewId}": {
      "delete": {
        "tags": ["Reviews"],
        "summary": "Delete a review (user or admin)",
        "security": [{ "BearerAuth": [] }],
        "parameters": [{ "name": "reviewId", "in": "path", "type": "string", "required": true }],
        "responses": { "200": { "description": "Review deleted" }, "401": { "description": "Unauthorized" } }
      }
    },
    "/comments/{bookId}": {
      "post": {
        "tags": ["Comments"],
        "summary": "Add a comment to a book (user)",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          { "name": "bookId", "in": "path", "type": "string", "required": true },
          { "name": "comment", "in": "body", "schema": { "type": "string" } }
        ],
        "responses": { "201": { "description": "Comment added" }, "401": { "description": "Unauthorized" } }
      }
    },
    "/comments/{commentId}": {
      "delete": {
        "tags": ["Comments"],
        "summary": "Delete a comment (user or admin)",
        "security": [{ "BearerAuth": [] }],
        "parameters": [{ "name": "commentId", "in": "path", "type": "string", "required": true }],
        "responses": { "200": { "description": "Comment deleted" }, "401": { "description": "Unauthorized" } }
      }
    },
    "/borrows/{bookId}": {
      "post": {
        "tags": ["Borrow"],
        "summary": "Borrow a hardcopy book (user)",
        "security": [{ "BearerAuth": [] }],
        "parameters": [{ "name": "bookId", "in": "path", "type": "string", "required": true }],
        "responses": { "201": { "description": "Book borrowed" }, "401": { "description": "Unauthorized" } }
      }
    },
    "/borrows/return/{borrowId}": {
      "post": {
        "tags": ["Borrow"],
        "summary": "Return a borrowed book (user)",
        "security": [{ "BearerAuth": [] }],
        "parameters": [{ "name": "borrowId", "in": "path", "type": "string", "required": true }],
        "responses": { "200": { "description": "Book returned" }, "401": { "description": "Unauthorized" } }
      }
    },
    "/borrows": {
      "get": {
        "tags": ["Borrow"],
        "summary": "Get all borrows for the logged-in user",
        "security": [{ "BearerAuth": [] }],
        "responses": { "200": { "description": "List of borrows" }, "401": { "description": "Unauthorized" } }
      }
    },
    "/todos": {
      "post": {
        "tags": ["Todos"],
        "summary": "Add a todo (user)",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          { "name": "title", "in": "body", "schema": { "type": "string" } },
          { "name": "targetCompletedDate", "in": "body", "schema": { "type": "string", "format": "date" } }
        ],
        "responses": { "201": { "description": "Todo created" }, "401": { "description": "Unauthorized" } }
      },
      "get": {
        "tags": ["Todos"],
        "summary": "Get all todos for the user",
        "security": [{ "BearerAuth": [] }],
        "responses": { "200": { "description": "List of todos" }, "401": { "description": "Unauthorized" } }
      }
    },
    "/todos/{id}": {
      "put": {
        "tags": ["Todos"],
        "summary": "Update a todo",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "type": "string", "required": true },
          { "name": "title", "in": "body", "schema": { "type": "string" } },
          { "name": "targetCompletedDate", "in": "body", "schema": { "type": "string", "format": "date" } },
          { "name": "completed", "in": "body", "schema": { "type": "boolean" } }
        ],
        "responses": { "200": { "description": "Todo updated" }, "401": { "description": "Unauthorized" } }
      },
      "delete": {
        "tags": ["Todos"],
        "summary": "Delete a todo",
        "security": [{ "BearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "type": "string", "required": true }],
        "responses": { "200": { "description": "Todo deleted" }, "401": { "description": "Unauthorized" } }
      }
    }
  },
  "definitions": {
    "UserRegistrationRequest": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "example": "John Doe" },
        "email": { "type": "string", "example": "johndoe@example.com" }
      }
    },
    "VerifyUserRequest": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "example": "John Doe" },
        "email": { "type": "string", "example": "johndoe@example.com" },
        "otp": { "type": "string", "example": "1234" },
        "password": { "type": "string", "example": "SecurePassword123" }
      }
    },
    "LoginRequest": {
      "type": "object",
      "properties": {
        "email": { "type": "string", "example": "johndoe@example.com" },
        "password": { "type": "string", "example": "SecurePassword123" }
      }
    },
    "AdminRegistrationRequest": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "example": "Admin User" },
        "email": { "type": "string", "example": "admin@example.com" }
      }
    },
    "VerifyAdminRequest": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "example": "Admin User" },
        "email": { "type": "string", "example": "admin@example.com" },
        "otp": { "type": "string", "example": "1234" },
        "password": { "type": "string", "example": "AdminPassword123" }
      }
    }
  }
}